@page "/UserSettings"
@using Discord.WebSocket

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager uriHelper;
@inject MangaService MS;

<PageTitle>User Settings</PageTitle>

<p><strong>Feature Coming Soon!</strong></p>

<body>
    <EditForm Model="@userModel" OnValidSubmit="() => ConnectToDiscord()">
        <InputText placeholder="Discord Guild ID" id="GuildID" @bind-Value="userModel.GuildID" class="form-control form-control-sm"/>
        <InputText placeholder="Discord User ID" id="Discord User ID" @bind-Value="userModel.DiscordID" class="form-control form-control-sm"/>
        <input type="submit" class="btn btn-primary" value="Update Discord Nickname" />
    </EditForm>
</body>

@code
{
    private Manga M { get; set; } = new Manga();
    private UserModel userModel { get; set; } = new UserModel();
    private MongoDB.Bson.BsonDocument[]? manga;
    private List<MongoDB.Bson.BsonDocument> mangaList;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userModel.UserName = authState.User.Identity.Name;
        Console.WriteLine("http struf: {0} done", userModel.UserName);
        mangaList = await MS.GetMangaAsync(userModel.UserName);
        manga = mangaList.ToArray();
        base.OnInitialized();
        var timer = new System.Threading.Timer((_) =>
        {
            InvokeAsync(async () =>
            {
                StateHasChanged();
            });
        }, null, 0, 1000);
    }

    private async Task ConnectToDiscord()
    {
        try
        {
            DiscordSocketClient _client = new DiscordSocketClient();
            ulong guildID = ulong.Parse(userModel.GuildID);
            ulong DiscordUserID = ulong.Parse(userModel.DiscordID);
            var token = File.ReadAllText("auth.txt");
            await _client.LoginAsync(Discord.TokenType.Bot, token);
            await _client.StartAsync();
            _client.Ready += async () =>
            {
                var user = await _client.Rest.GetGuildUserAsync(guildID, DiscordUserID);
                var oldName = user.Nickname;
                oldName = oldName.Split('(')[0];
                Console.WriteLine(oldName);
                var newName = oldName + " (" + MS.AvgCalc() + "%)";
                Console.WriteLine(newName);
                await user.ModifyAsync(p => p.Nickname = newName);
            };
            await _client.StopAsync();
            Console.WriteLine("Discord nickname updated");
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
        }
    }
}